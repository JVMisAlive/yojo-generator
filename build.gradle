plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'java-library'
}

java {
    withJavadocJar()
    withSourcesJar()
}

group 'ru.yojo'
version '0.0.1'

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/yojo-generator/generator")
            credentials {
                username = project.findProperty("user") ?: System.getenv("USERNAME")
                password = project.findProperty("token") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

//Uncomment this if you need to test by YojoCLI
//sourceSets {
//    main {
//        java {
//            srcDir "${buildDir}/generated-sources"
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'ru.yojo.codegen'
    mainClass = 'ru.yojo.codegen.YojoCLI'
}

mainClassName = "ru.yojo.codegen.YojoCLI"

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
    zip64 = true
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
        duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
}

dependencies {
    implementation 'org.springframework:spring-context:5.3.25'
    implementation 'org.yaml:snakeyaml:2.0'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.10'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
}

test {
    useJUnitPlatform()
}